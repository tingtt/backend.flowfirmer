version: "3.1"
services:
  flask:
    build:
      context: ./login
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - "./login:/projects"
    tty: true
    environment:
      TZ: Asia/Tokyo
    command: python /projects/app.py

  # api-gateway:
  #   image: api-gateway
  #   build:
  #     context: ./api-gateway
  #     dockerfile: Dockerfile
  #   container_name: api-gateway
  #   ports:
  #   - "4002:4002"
  #   environment:
  #   - PORT=4002
  #   - LOGIN_HOST=flask
  #   - LOGIN_PORT=5000
  #   - ONGOING_DATA_HOST=ongoing-data
  #   - ONGOING_DATA_PORT=4003
  #   restart: "no"

  db:
    image: mysql:5.7
    ports:
      - "3306"
    volumes:
      # 初期データを投入するSQLが格納されているdir
      - ./db/mysql_init:/docker-entrypoint-initdb.d
      # 永続化するときにマウントするdir
      - ./db/mysql_data:/var/lib/mysql
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ecc
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: test
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci

  mongo:
    image: mongo:4.2.0
    container_name: mongo
    restart: always
    ports:
      - "27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ecc
      MONGO_INITDB_DATABASE: test
      TZ: Asia/Tokyo
    volumes:
      - ./mongo/db:/data/db
      - ./mongo/configdb:/data/configdb
      - ./mongo/init:/docker-entrypoint-initdb.d

  ongoing-data:
    image: ongoing-data
    build:
      context: ./ongoing-data
      dockerfile: Dockerfile
    container_name: ongoing-data
    ports:
      - "4003:4003"
    environment:
      - DBHOST=mongo
      - DBPORT=27017
      - PORT=4003
      - LOGIN_HOST=flask
      - LOGIN_PORT=5000
    restart: "no"
    depends_on:
      - mongo

  # nginx:
  #   image: nginx
  #   depends_on:
  #     - flask
  #     - ongoing-data
  #     - next
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./proxy/log:/var/log/nginx

  next:
    image: node:12-buster
    working_dir: /next
    volumes:
      - "./next:/next"
    ports:
      - "3200:3000"
    command: >
      sh -c " npm install && npm run dev "
